import pygame
import math
pygame.init()

start_time=0
clock = pygame.time.Clock()
screen_width = 1000
screen_height = 750
high_score = 0
current_score = 0
screen = pygame.display.set_mode((screen_width, screen_height))
bg=pygame.image.load('scary.png')
broom=pygame.image.load('idk.png')
broom_rect=broom.get_rect()
broom_x_pos=500
broom1=pygame.image.load('idk.png')

broom1_rect=broom1.get_rect()
broom1_x_pos=700


broom2=pygame.image.load('idk.png')
broom2_rect=broom2.get_rect()
broom2_x_pos=1000


broom3=pygame.image.load('idk.png')
broom3_rect=broom3.get_rect()
broom3_x_pos=1000








game_active = False

game_started = False

game_font = pygame.font.SysFont('Comic Sans MS', 50)
game_message = game_font.render('Press Space to Start', True, (255,255,255))
game_rect = game_message.get_rect(center=(500,300))

# Add title text
title_font = pygame.font.SysFont('Comic Sans MS', 80)
title_text = title_font.render('Quidditch', True, (255,255,255))
title_rect = title_text.get_rect(center=(500,200))

# Rest of your variables remain the same...

bg_width=bg.get_width()
scroll=0
tiles=math.ceil(screen_width/bg_width)+1
test_font=pygame.font.SysFont('Comic Sans MS',30)

title_font = pygame.font.SysFont('Comic Sans MS', 80)
title_text = title_font.render('Quidditch', True, (255,255,255))






def display_score():
    current_time=int(pygame.time.get_ticks()/1000) -start_time
    score_surf=test_font.render(str(current_time),True,"white")
    score_rect=score_surf.get_rect(center=(500,50))
    screen.blit(score_surf,score_rect)




class Player:
    def __init__(self,x,y):
        self.speed=9
        self.image=pygame.image.load('newone.png')
        self.image=pygame.transform.scale(self.image,(50,50))
        self.rect=self.image.get_rect(topleft=(x,y))
        self.fly_sound=pygame.mixer.Sound('music.wav')
    def move(self):
        keys=pygame.key.get_pressed()
        if keys[pygame.K_LEFT] or keys[pygame.K_a]:  # Left arrow or A key
            self.rect.x -= self.speed
        if keys[pygame.K_RIGHT] or keys[pygame.K_d]:  # Right arrow or D key
            self.rect.x += self.speed

            # Vertical movement
        if keys[pygame.K_UP] or keys[pygame.K_w]:  # Up arrow or W key
            self.rect.y -= self.speed
        if keys[pygame.K_DOWN] or keys[pygame.K_s]:  # Down arrow or S key
            self.rect.y += self.speed


player=Player(0,0)

pygame.display.set_caption('Quidditch')
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    player.fly_sound.play()
    if not game_started:
        # Show start screen
        screen.fill((0, 0, 0))
        screen.blit(title_text, title_rect)
        screen.blit(game_message, game_rect)
        
        keys = pygame.key.get_pressed()
        if keys[pygame.K_SPACE]:
            game_started = True
            game_active = True
            start_time = int(pygame.time.get_ticks()/1000)
    
    elif game_active:
        # Your existing game code here
        for i in range(0,tiles):
            screen.blit(bg,(i*bg_width+scroll,0))

        player.move()

        if player.rect.top <= 0:
            player.rect.top = 0
        if player.rect.bottom >= 750:
            player.rect.bottom = 750

        if player.rect.left <= -1:
            player.rect.left = -1

        if player.rect.right >= 1000:
            player.rect.right = 1000

        scroll-=5

        if abs(scroll) > bg_width:
            scroll=0

        screen.blit(player.image,player.rect)

        screen.blit(broom,(broom_x_pos,300))
        broom_x_pos-=14
        broom_rect.x=broom_x_pos
        broom_rect.y=300



        if broom_x_pos < -20:
            broom_x_pos = screen_width

        if player.rect.colliderect(broom_rect):  # Collision with broom
            game_active = False

            current_score = int(pygame.time.get_ticks() / 1000) - start_time
            if current_score > high_score:
                high_score = current_score  # Update high score


        screen.blit(broom1,(broom1_x_pos,100))
        broom1_x_pos-=10
        broom1_rect.x=broom1_x_pos
        broom1_rect.y=100


        if broom1_x_pos < -50:
            broom1_x_pos = screen_width



        if player.rect.colliderect(broom1_rect):  # Collision with broom1
            game_active = False

            current_score = int(pygame.time.get_ticks() / 1000) - start_time
            if current_score > high_score:
                high_score = current_score



        screen.blit(broom2, (broom2_x_pos, 600))
        broom2_x_pos -= 8
        broom2_rect.x = broom2_x_pos
        broom2_rect.y = 600

        if broom2_x_pos < -50:
            broom2_x_pos = screen_width

        if player.rect.colliderect(broom2_rect):  # Collision with broom2
            game_active = False

            current_score = int(pygame.time.get_ticks() / 1000) - start_time
            if current_score > high_score:
                high_score = current_score
#################################################################
        screen.blit(broom3, (broom3_x_pos, 479))
        broom3_x_pos -= 20
        broom3_rect.x = broom3_x_pos
        broom3_rect.y = 479

        if broom3_x_pos < -100:
            broom3_x_pos = screen_width

        if player.rect.colliderect(broom3_rect):  # Collision with broom3
            game_active = False

            current_score = int(pygame.time.get_ticks() / 1000) - start_time
            if current_score > high_score:
                high_score = current_score








    else:
        player.fly_sound.stop()
        screen.fill((0, 0, 0))
        game_screen = test_font.render('GAME OVER', True, (255, 255, 255))
        game_screen_rect = game_screen.get_rect(topleft=(500, 50))
        screen.blit(game_screen, game_screen_rect)
        space_screen = game_font.render('HIT SPACE TO PLAY AGAIN', True, (255, 255, 255))
        space_screen_rect = space_screen.get_rect(topleft=(200, 300))
        screen.blit(space_screen, space_screen_rect)
        high_score_text = test_font.render(f'High Score: {high_score}', True, (255, 255, 255))
        high_score_rect = high_score_text.get_rect(center=(500, 200))
        screen.blit(high_score_text, high_score_rect)

        # Display final score
        final_score_text = test_font.render(f'Your Score: {current_score}', True, (255, 255, 255))
        final_score_rect = final_score_text.get_rect(center=(500, 300))
        screen.blit(final_score_text, final_score_rect)
        keys = pygame.key.get_pressed()
        if keys[pygame.K_SPACE]:
            game_active = True
            player.rect.topleft = (0, 0)
            broom_x_pos = screen_width
            start_time = int(pygame.time.get_ticks()/1000)

    if game_started and game_active:
        display_score()
    
    pygame.display.update()
    clock.tick(60)

pygame.quit()
